* plain text stays as it is, with line wrapping
* [name](url) is a link
* ``` is multi-line code (ie. don't wrap lines)
* `t<id> for a textarea
* `c<id> for a div
* `sc< and >`sc for javascript
* js is the only one with a special closing tag (it can have > in it)
* :r<word> for colorForth red etc
* all the colour stuff is for colorForth

     define("unlink(s)", "ulk") :(unst)
ulk  s "<a href='" arb . link "'>" arb . name "</a>" = "[" name "](" link ")" :s(ulk)
     unlink = s  :(return)

unst define("unesc(s)", "ugt") :(tgst)
ugt  s "&lt;" = "<"            :s(ugt)
ult  s "&gt;" = ">"            :s(ult)
     unesc = unlink(s)         :(return)

tgst define("tag(file,iden,before,after)", "tag")             :(cst)
tag  file iden "&lt;" arb . match "&gt;" = before match after :s(tag)
     tag = file                                               :(return)

cst  define("colTag(file,colour)", "col")                          :(st)
col  colour len(1) . c
     file = tag(file, ":" c, "<span class=" colour ">", "</span>")
     colTag = file                                                 :(return)

st   output = "<!DOCTYPE html>"
     output = "<html>"
     output = "<head>"
     output = "  <title>Garklein's stuff</title>"
     output = "  <style>"
     output = "body     { display:flex; flex-direction:column; align-items:center;"
     output = "           font-size:1rem; margin:min(10vw,100px) auto; }"
     output = "pre      { max-width:min(80ch,80vw); margin:auto; white-space:pre-wrap; }"
     output = ".code    { max-width:80vw; word-break:break-all; }"
     output = ".white   { color:#444444; }"
     output = ".red     { color:#ff0000; }"
     output = ".green   { color:#009900; }"
     output = ".hgreen  { color:#005400; }"
     output = ".blue    { color:#0000ff; }"
     output = ".yellow  { color:#ddaa00; }"
     output = ".magenta { color:#ff00ff; }"
     output = ".cyan    { color:#00cccc; }"
     output = "  </style>"
     output = "</head>"
     output = "<body><div>"

     filename = input

     nl = "*~3|a."
     file = input

in   file = file nl input :s(in)
     file = file nl

gt   file "<" = "&lt;" :s(gt)
lt   file ">" = "&gt;" :s(lt)

     file = colTag(file, "red")
     file = colTag(file, "green")
* hex green
     file = tag(file, ":hex", "<i class=hgreen>", "</i>")
     file = colTag(file, "blue")
     file = colTag(file, "yellow")
     file = colTag(file, "white")
     file = colTag(file, "cyan")
     file = colTag(file, "magenta")

     cf = colTag(":r&lt;color&gt;", "red") colTag(":g&lt;Forth&gt;", "green")
cfr  file ":&lt;clrfrth&gt;" = cf :s(cfr)

     file = tag(file, "`t", "<textarea id='" , "'></textarea>")
     file = tag(file, "`d", "<div id='",       "'></div>")

link file "[" break("[]") . name "](" break(")") . link ")" = "<a href='" link "'>" name "</a>"    :s(link)
code file "```"     nl arb . c "```"     = "</pre><pre class='code'>" nl unlink(c) "</pre><pre>"   :s(code)
scpt file "`sc&lt;" nl arb . c "&gt;`sc" = "<script>"                 nl unesc(c) "</script>"      :s(scpt)

     file = "<pre>" nl file
     file = file "</pre>"
     file pos(0) "<pre>" nl "</pre>"         = ""
     file        "<pre>" nl "</pre>" rpos(0) = ""
     file = file nl
out  file arb . output nl =  :s(out)

     output = "<br>"

     filename break("/.") . file ".wm" =
     path = "/<a href='" file ".html'>" file ".html</a>"
     back = ""

fld  filename break("/") . folder "/" rpos(0) = :f(home)
     path = "/<a href='" back folder ".html'>" folder "</a>" path
     back = back "../" :(fld)

home path   = "<a href='" back "index.html'>~</a>" path
     output = "<pre style='width:100%;text-align:center'><br>" path "</pre>"
     output = "</div></body>"

     output = "</html>"
end
